"""
Решето Эратосфена. Оно помогает найти все простые числа, не превосходящие n.

Алгоритм такой:
1. Выписываем все целые числа от 0 до nn. Сразу помечаем, что числа 0 и 1 не
являются простыми (записываем на соответствующих этим числам позициях False).
2. Заводим переменную mathrm{num}num,
равную первому не рассмотренному простому числу. Изначально она равна 2.
3. Помечаем в списке числа от 2 cdot mathrm{num}2⋅num до nn с шагом,
равным mathrm{num}num, составными.
Например, для 2 пометим значением False чётные числа — 4, 6, 8 и так далее.
4. Теперь в mathrm{num}num присваиваем следующее простое число,
то есть следующее не рассмотренное число в списке.
Для этого достаточно увеличивать mathrm{num}num с шагом 1,
пропуская числа, отмеченные как составные.
На первом найденном простом числе следует остановиться.
5. Повторяем два предыдущих шага, пока это возможно.
"""


def eratosthenes_effective(n):
    numbers = list(range(n + 1))
    numbers[0] = numbers[1] = False
    for num in range(2, n):
        if numbers[num]:
            for j in range(num * num, n + 1, num):
                numbers[j] = False
    return numbers


n = 15
print(eratosthenes_effective(n))

# Пример
"""
[0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15] # Запишем числа от 0 до 15

[False False 2 3 4 5 6 7 8 9 10 11 12 13 14 15] # Отметим, что 0 и 1 не простые

num = 2 # Пометим все числа, кратные 2, начиная с 4, значением False

[False False 2 3 False 5 False 7 False 9 False 11 False 13 False 15]

num = 3 # Пометим все числа, кратные 3, начиная с 9, значением False

[False False 2 3 False 5 False 7 False False False 11 False 13 False False]

num = 5 # Алгоритм можно завершить, так как num**2 больше 15.
              # Все числа, кратные 5 и меньшие 15, уже рассмотрены.
"""
